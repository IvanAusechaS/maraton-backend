generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                   Int          @id @default(autoincrement())
  email                String       @unique
  password             String
  username             String
  fecha_nacimiento     DateTime
  resetPasswordExpires DateTime?
  resetPasswordToken   String?
  comentarios          Comentario[]
  gustos               Gusto[]
}

model Gusto {
  id            Int      @id @default(autoincrement())
  favoritos     Boolean
  reproducida   Boolean
  ver_mas_tarde Boolean
  calificacion  Int
  usuarioId     Int
  peliculaId    Int
  pelicula      Pelicula @relation(fields: [peliculaId], references: [id])
  usuario       Usuario  @relation(fields: [usuarioId], references: [id])

  @@unique([usuarioId, peliculaId])
}

model Comentario {
  id                Int          @id @default(autoincrement())
  mensaje           String
  usuarioId         Int
  peliculaId        Int
  comentarioPadreId Int?
  comentarioPadre   Comentario?  @relation("Respuestas", fields: [comentarioPadreId], references: [id])
  respuestas        Comentario[] @relation("Respuestas")
  pelicula          Pelicula     @relation(fields: [peliculaId], references: [id])
  usuario           Usuario      @relation(fields: [usuarioId], references: [id])
}

model Pelicula {
  id              Int           @id @default(autoincrement())
  duracion        Int
  largometraje    String
  actores         String
  a√±o            Int
  disponible      Boolean
  sinopsis        String
  trailer         String
  titulo          String
  director        String
  portada         String
  paisId          Int
  clasificacionId Int
  idiomaId        Int
  catalogos       Catalogo[]
  comentarios     Comentario[]
  gustos          Gusto[]
  clasificacion   Clasificacion @relation(fields: [clasificacionId], references: [id])
  idioma          Idioma        @relation(fields: [idiomaId], references: [id])
  pais            Pais          @relation(fields: [paisId], references: [id])
  subtitulos      Subtitulo[]
}

model Pais {
  id        Int        @id @default(autoincrement())
  nombre    String
  bandera   String
  peliculas Pelicula[]
}

model Clasificacion {
  id          Int        @id @default(autoincrement())
  nombre      String
  edad_minima Int
  peliculas   Pelicula[]
}

model Genero {
  id          Int        @id @default(autoincrement())
  descripcion String
  estado      Boolean
  catalogos   Catalogo[]
}

model Catalogo {
  id         Int      @id @default(autoincrement())
  peliculaId Int
  generoId   Int
  genero     Genero   @relation(fields: [generoId], references: [id])
  pelicula   Pelicula @relation(fields: [peliculaId], references: [id])
}

model Idioma {
  id         Int         @id @default(autoincrement())
  nombre     String
  version    String
  peliculas  Pelicula[]
  subtitulos Subtitulo[]
}

model Subtitulo {
  id          Int      @id @default(autoincrement())
  estado      Boolean
  color       String
  fuente      String
  descriptiva Boolean
  peliculaId  Int
  idiomaId    Int
  idioma      Idioma   @relation(fields: [idiomaId], references: [id])
  pelicula    Pelicula @relation(fields: [peliculaId], references: [id])
}
